@model PeaceInternational.Core.Entity.Tourcost

@{
    ViewData["Title"] = "Tourcost";
}

<style type="text/css">
    p {
        margin-bottom: 2px;
        font-family: 'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif
    }

    th {
        text-align: center;
        font-size: 12px;
    }

    td {
        text-align: center;
        font-size: 14px;
        padding: 0.3rem !important;
    }

    .wrap {
        text-wrap: normal;
        word-wrap: break-word;
    }

    .float {
        position: fixed;
        width: 60px;
        height: 60px;
        bottom: 40px;
        right: 40px;
        background-color: #0C9;
        border-radius: 50px;
        text-align: center;
        box-shadow: 2px 2px 3px #999;
    }

    .floate {
        position: fixed;
        width: 60px;
        height: 60px;
        bottom: 140px;
        right: 40px;
        background-color: cadetblue;
        border-radius: 50px;
        text-align: center;
        box-shadow: 2px 2px 3px #999;
    }

    img {
        position: relative;
        max-height: 30%;
        max-width: 30%;
        margin-left: 10px;
        top: -70px;
    }

    .loader {
        position: fixed;
        left: 50%;
        top: 50%;
        border: 16px solid #f3f3f3; /* Light grey */
        border-top: 16px solid #3498db; /* Blue */
        border-radius: 50%;
        width: 120px;
        height: 120px;
        animation: spin 2s linear infinite;
    }

    @@keyframes spin {
        0% {
            transform: rotate(0deg);
        }

        100% {
            transform: rotate(360deg);
        }
    }
</style>
<div id="tourcostTemplate"></div>
<hr />
<div id="backPage">
    <div id="pppTemplate"></div>
    <img src="~/img/logo2.jpg" />
</div>
<button class="btn floate" id="printTourcost"><i class="fa fa-print fa-2x"></i></button>
<button class="btn float" id="printPPPcost"><i class="fa fa-print fa-2x"></i></button>
<div id="loader"></div>

@section Scripts{
    <partial name="_ValidationScriptsPartial" />
    <script src="~/js/ppp-template.js"></script>
    <script src="~/js/tourcost-template.js"></script>
    <script type="text/javascript">

        var data =  @Html.Raw(Json.Serialize(Model));
        console.log(data);

        tippy('#printTourcost', {
            content: "Print Tourcost"
        });

        tippy('#printPPPcost', {
            content: "Print Per Person Cost"
        });

        data.guideTotalCost = 0;
        data.PAX = 0;
        if (data.minPAX == data.maxPAX) {
            data.PAX = data.minPAX
        }

        if (data.guideId != null) {

            if (data.guideDaysHalfDay != null) {
                data.guideTotalCost += data.guide.halfDayRate * data.guideDaysHalfDay;
            }

            if (data.guideDaysFullDay != null) {
                data.guideTotalCost += data.guide.fullDayRate * data.guideDaysFullDay;
            }

            if (data.guideDaysEscort != null) {
                data.guideTotalCost += data.guide.overNight * data.guideDaysEscort;
            }
        }

        data.image = "img/logo2.jpg";
        data.isLuxury = data.isLuxury ? "Yes" : "No";
        data.t1total = 0;
        data.t2total = 0;
        data.t3total = 0;
        data.t4total = 0;
        data.t5total = 0;
        data.t6total = 0;
        data.catAXTotal = 0;
        data.catAXXTotal = 0;
        data.catAETotal = 0;
        data.catBXTotal = 0;
        data.catBXXTotal = 0;
        data.catBETotal = 0;
        data.catCXTotal = 0;
        data.catCXXTotal = 0;
        data.catCETotal = 0;
        data.category1Total = 0;
        data.category2Total = 0;
        data.category3Total = 0;
        data.category4Total = 0;

        $.each(data.tourcostDetail, function (idx, item) {

            if (item.sector2 && item.sector3) {

                item.t1cost = item.sector1.sectorTransport[0].cost + item.sector2.sectorTransport[0].cost + item.sector3.sectorTransport[0].cost;
                data.t1total += item.t1cost;
                item.t2cost = item.sector1.sectorTransport[1].cost + item.sector2.sectorTransport[1].cost + item.sector3.sectorTransport[1].cost;
                data.t2total += item.t2cost;
                item.t3cost = item.sector1.sectorTransport[2].cost + item.sector2.sectorTransport[2].cost + item.sector3.sectorTransport[2].cost;
                data.t3total += item.t3cost;
                item.t4cost = item.sector1.sectorTransport[3].cost + item.sector2.sectorTransport[3].cost + item.sector3.sectorTransport[3].cost;
                data.t4total += item.t4cost;
                item.t5cost = item.sector1.sectorTransport[4].cost + item.sector2.sectorTransport[4].cost + item.sector3.sectorTransport[4].cost;
                data.t5total += item.t5cost;
                item.t6cost = item.sector1.sectorTransport[5].cost + item.sector2.sectorTransport[5].cost + item.sector3.sectorTransport[5].cost;
                data.t6total += item.t6cost;

                item.sector2.code = `/${item.sector2.code}`
                item.sector3.code = `/${item.sector3.code}`
            }
            else if (item.sector2) {
                item.t1cost = item.sector1.sectorTransport[0].cost + item.sector2.sectorTransport[0].cost;
                data.t1total += item.t1cost;
                item.t2cost = item.sector1.sectorTransport[1].cost + item.sector2.sectorTransport[1].cost;
                data.t2total += item.t2cost;
                item.t3cost = item.sector1.sectorTransport[2].cost + item.sector2.sectorTransport[2].cost;
                data.t3total += item.t3cost;
                item.t4cost = item.sector1.sectorTransport[3].cost + item.sector2.sectorTransport[3].cost;
                data.t4total += item.t4cost;
                item.t5cost = item.sector1.sectorTransport[4].cost + item.sector2.sectorTransport[4].cost;
                data.t5total += item.t5cost;
                item.t6cost = item.sector1.sectorTransport[5].cost + item.sector2.sectorTransport[5].cost;
                data.t6total += item.t6cost;

                item.sector2.code = `/${item.sector2.code}`
            }
            else {
                item.t1cost = item.sector1.sectorTransport[0].cost;
                data.t1total += item.t1cost;
                item.t2cost = item.sector1.sectorTransport[1].cost;
                data.t2total += item.t2cost;
                item.t3cost = item.sector1.sectorTransport[2].cost;
                data.t3total += item.t3cost;
                item.t4cost = item.sector1.sectorTransport[3].cost;
                data.t4total += item.t4cost;
                item.t5cost = item.sector1.sectorTransport[4].cost;
                data.t5total += item.t5cost;
                item.t6cost = item.sector1.sectorTransport[5].cost;
                data.t6total += item.t6cost;
            };

            if (item.hotelA) {

                if (data.mealType == 'AP') {

                    item.hotelA.hotelRoomRate.singleBed += item.hotelA.hotelRoomRate.ap;
                    item.hotelA.hotelRoomRate.doubleBed += item.hotelA.hotelRoomRate.ap * 2;
                    item.hotelA.hotelRoomRate.extraBed += item.hotelA.hotelRoomRate.ap * 3;
                }
                else if (data.mealType == 'MAP') {
                    item.hotelA.hotelRoomRate.singleBed += item.hotelA.hotelRoomRate.map;
                    item.hotelA.hotelRoomRate.doubleBed += item.hotelA.hotelRoomRate.map * 2;
                    item.hotelA.hotelRoomRate.extraBed += item.hotelA.hotelRoomRate.map * 3;
                }

                 data.catAXTotal += item.hotelA.hotelRoomRate.singleBed;
                data.catAXXTotal += item.hotelA.hotelRoomRate.doubleBed;
                data.catAETotal += item.hotelA.hotelRoomRate.extraBed;
            }

            if (item.hotelB) {

                if (data.mealType == 'AP') {
                    item.hotelB.hotelRoomRate.singleBed += item.hotelB.hotelRoomRate.ap;
                    item.hotelB.hotelRoomRate.doubleBed += item.hotelB.hotelRoomRate.ap * 2;
                    item.hotelB.hotelRoomRate.extraBed += item.hotelB.hotelRoomRate.ap * 3;
                }
                else if (data.mealType == 'MAP') {

                    item.hotelB.hotelRoomRate.singleBed += item.hotelB.hotelRoomRate.map;
                    item.hotelB.hotelRoomRate.doubleBed += item.hotelB.hotelRoomRate.map * 2;
                    item.hotelB.hotelRoomRate.extraBed += item.hotelB.hotelRoomRate.map * 3;
                }

                data.catBXTotal += item.hotelB.hotelRoomRate.singleBed;
                data.catBXXTotal += item.hotelB.hotelRoomRate.doubleBed;
                data.catBETotal += item.hotelB.hotelRoomRate.extraBed;
            }

            if (item.hotelC) {

                if (data.mealType == 'AP') {
                    item.hotelC.hotelRoomRate.singleBed += item.hotelC.hotelRoomRate.ap;
                    item.hotelC.hotelRoomRate.doubleBed += item.hotelC.hotelRoomRate.ap * 2;
                    item.hotelC.hotelRoomRate.extraBed += item.hotelC.hotelRoomRate.ap * 3;
                }
                else if (data.mealType == 'MAP') {
                    item.hotelC.hotelRoomRate.singleBed += item.hotelC.hotelRoomRate.map;
                    item.hotelC.hotelRoomRate.doubleBed += item.hotelC.hotelRoomRate.map * 2;
                    item.hotelC.hotelRoomRate.extraBed += item.hotelC.hotelRoomRate.map * 3;
                }

                data.catCXTotal += item.hotelC.hotelRoomRate.singleBed;
                data.catCXXTotal += item.hotelC.hotelRoomRate.doubleBed;
                data.catCETotal += item.hotelC.hotelRoomRate.extraBed;
            }

            data.category1Total += item.category1Cost;
            data.category2Total += item.category2Cost;
            data.category3Total += item.category3Cost;
            data.category4Total += item.category4Cost;

        });

   
        var result = Handlebars.templates['tourcost-template'](data);
        $('#tourcostTemplate').html(result);
    
        var result1 = Handlebars.templates['ppp-template'](data);
        $('#pppTemplate').html(result1);

        for (let i = 0; i < 3; i++) {

            let singleBed = parseFloat($('#hotelTable tbody td:nth-child(4)')[i].innerHTML);
            let halfTwin = parseFloat($('#hotelTable tbody td:nth-child(3)')[i].innerHTML);
            let singleSupplement = (singleBed - halfTwin).toFixed(2);
            $('#hotelTable tbody td:nth-child(5)')[i].innerHTML = singleSupplement;
        }

        let lowerTransportIterator = 0
        let upperTransportIterator = 0

        switch (data.lowerTransport) {
            case "T1":
                break;

            case "T2":
                lowerTransportIterator = 1;
                break;

            case "T3":
                lowerTransportIterator = 2;
                break;

            case "T4":
                lowerTransportIterator = 3;
                break;

            case "T5":
                lowerTransportIterator = 4;
                break;

            case "T6":
                lowerTransportIterator = 5;
                break;
        }

        switch (data.upperTransport) {
            case "T1":
                upperTransportIterator = 5;
                break;

            case "T2":
                upperTransportIterator = 4;
                break;

            case "T3":
                upperTransportIterator = 3;
                break;

            case "T4":
                upperTransportIterator = 2;
                break;

            case "T5":
                upperTransportIterator = 1;
                break;

            case "T6":
                break;
        }

        console.log(lowerTransportIterator, upperTransportIterator);

        for (let i = 0; i < upperTransportIterator; i++) {
            $(`#itcTable tbody tr:eq(${5 - i})`).remove();
        }

        for (let i = 0; i < lowerTransportIterator; i++) {
            $('#itcTable tbody tr:eq(0)').remove()
        }

        let flag = 0;
        data.category1 != null ? flag++ : '';
        data.category2 != null ? flag++ : '';
        data.category3 != null ? flag++ : '';
        data.category4 != null ? flag++ : '';

        console.log(flag);

        //For first calc
        for (let i = 0; i < 16; i = i + 3) {

            let val =   parseFloat($(`#pppTable tr:nth-child(${i + 1}) td:nth-child(2)`)[0].innerText) +
                parseFloat($(`#pppTable tr:nth-child(${i + 1}) td:nth-child(3)`)[0].innerText) +
                parseFloat($(`#pppTable tr:nth-child(${i + 1}) td:nth-child(4)`)[0].innerText);

            val += flag >= 1 ? parseFloat($(`#pppTable tr:nth-child(${i + 1}) td:nth-child(5)`)[0].innerText) : 0;
            val += flag >= 2 ? parseFloat($(`#pppTable tr:nth-child(${i + 1}) td:nth-child(6)`)[0].innerText) : 0;
            val += flag >= 3 ? parseFloat($(`#pppTable tr:nth-child(${i + 1}) td:nth-child(7)`)[0].innerText) : 0;
            val += flag >= 4 ? parseFloat($(`#pppTable tr:nth-child(${i + 1}) td:nth-child(8)`)[0].innerText) : 0;

            $(`#pppTable tr:nth-child(${i + 1}) td:nth-child(${flag + 5})`)[0].innerText = val


            //$(`#pppTable tr:nth-child(${i + 1}) td:nth-child(${flag + 6})`)[0].innerText = (1.13 * val).toFixed(2);
        };

        //For second calc
        for (let i = 1; i < 17; i = i + 3) {

            let val = parseFloat($(`#pppTable tr:nth-child(${i}) td:nth-child(2)`)[0].innerText) +
                parseFloat($(`#pppTable tr:nth-child(${i + 1}) td:nth-child(1)`)[0].innerText) +
                parseFloat($(`#pppTable tr:nth-child(${i}) td:nth-child(4)`)[0].innerText);

            val += flag >= 1 ? parseFloat($(`#pppTable tr:nth-child(${i}) td:nth-child(5)`)[0].innerText) : 0;
            val += flag >= 2 ? parseFloat($(`#pppTable tr:nth-child(${i}) td:nth-child(6)`)[0].innerText) : 0;
            val += flag >= 3 ? parseFloat($(`#pppTable tr:nth-child(${i}) td:nth-child(7)`)[0].innerText) : 0;
            val += flag >= 4 ? parseFloat($(`#pppTable tr:nth-child(${i}) td:nth-child(8)`)[0].innerText) : 0;


            $(`#pppTable tr:nth-child(${i + 1}) td:nth-child(2)`)[0].innerText = val;

            //$(`#pppTable tr:nth-child(${i + 1}) td:nth-child(3)`)[0].innerText = (1.13 * val).toFixed(2);
        };

        //For third calc
        for (let i = 1; i < 18; i = i + 3) {

            let val = parseFloat($(`#pppTable tr:nth-child(${i}) td:nth-child(2)`)[0].innerText) +
                parseFloat($(`#pppTable tr:nth-child(${i + 2}) td:nth-child(1)`)[0].innerText) +
                parseFloat($(`#pppTable tr:nth-child(${i}) td:nth-child(4)`)[0].innerText);

            val += flag >= 1 ? parseFloat($(`#pppTable tr:nth-child(${i}) td:nth-child(5)`)[0].innerText) : 0;
            val += flag >= 2 ? parseFloat($(`#pppTable tr:nth-child(${i}) td:nth-child(6)`)[0].innerText) : 0;
            val += flag >= 3 ? parseFloat($(`#pppTable tr:nth-child(${i}) td:nth-child(7)`)[0].innerText) : 0;
            val += flag >= 4 ? parseFloat($(`#pppTable tr:nth-child(${i}) td:nth-child(8)`)[0].innerText) : 0;

            $(`#pppTable tr:nth-child(${i + 2}) td:nth-child(2)`)[0].innerText = val;


            //$(`#pppTable tr:nth-child(${i + 2}) td:nth-child(3)`)[0].innerText = (1.13 * val).toFixed(2);
        };

          for (let i = 0; i < upperTransportIterator * 3; i++) {
            $(`#pppTable tbody tr:eq(${17 - i})`).remove()
        }

        for (let i = 0; i < lowerTransportIterator * 3; i++) {
            $('#pppTable tbody tr:eq(0)').remove()
        }

        $('#printTourcost').off('click').on('click', function () {
            document.body.scrollTop = 0; // For Safari
            document.documentElement.scrollTop = 0; // For Chrome, Firefox, IE and Opera
            $('#loader').addClass('loader');
            html2canvas($("#tourcostTemplate")[0], {
                scale: 5,
                width: 1200
            }).then(function (canvas) {

                var myImage = canvas.toDataURL("image/png");
                var tWindow = window.open("");
                $(tWindow.document.body)
                    .html("<img id='Image' src=" + myImage + " style='width:100%;'></img>")
                    .ready(function () {
                        $('#loader').removeClass('loader');
                        tWindow.focus();
                        tWindow.print();
                    });
            });

        });


        $('#printPPPcost').off('click').on('click', function () {
            document.body.scrollTop = 0; // For Safari
            document.documentElement.scrollTop = 0; // For Chrome, Firefox, IE and Opera
            $('#loader').addClass('loader');
            html2canvas($("#backPage")[0], {
                scale: 5
            }).then(function (canvas) {

                var myImage = canvas.toDataURL("image/png");
                var tWindow = window.open("");
                $(tWindow.document.body)
                    .html("<img id='Image' src=" + myImage + " style='width:100%;'></img>")
                    .ready(function () {
                        $('#loader').removeClass('loader');
                        tWindow.focus();
                        tWindow.print();
                    });
            });

        });

    </script>
}
